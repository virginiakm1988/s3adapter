adapter:
  exist: true
  type: ['skip', 'seq', 'para', 'lora', 'bitfit']
  switch: 
    first: false
    exist: true
    path: [0, 1, 2, 3, 4]
    tau:
      type: linear
      init_value: 5
      stop_value: 0.5
    strategy: global
    ratio: 0.5
    # freq: 0.1  # 0~1
    baseline: -1
    fix_thres: 0.8
    algo: 
      name: gdas          # choose from ['gdas', 'darts', 'fair_darts', 's3delta', 'gumbel_darts']
      soft_train:         # Set to True if you don't want to use one-hot when training weight
      soft_switch:        # Set to True if you don't want to use one-hot when training switch
      use_gumbel:         # Set this to True if using sampling-related algorithm, which includes ['s3delta', 'gdas', 'gumbel_darts']
      # For DARTS-based algorithm
      first_order:
      second_order:       # Calculate Hessian
      # For Fair-DARTS
      aux_loss_ratio:     # Scaling factor to zero-one loss
      # For S3Delta
      shift_tau:

  houlsby:
    input: false
  
  seq:
    bottleneck_dim: 32

  para:
    bottleneck_dim: 32
  
  lora:
    rank: 8

  mix:
    used_adapter: ['seq', 'para', 'lora']
    bottleneck_dim: 10
    rank: 2

  bitfit: